---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/hotels":
    get:
      summary: list hotels
      responses:
        '200':
          description: successful
    post:
      summary: creates a hotel successfully
      tags:
      - Hotels
      security:
      - bearer_auth: []
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '201':
          description: hotel created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: text
                rating:
                  type: integer
                image:
                  type: string
                location:
                  type: string
                user_id:
                  type: string
              required:
              - name
              - description
              - rating
              - image
              - location
              - user_id
  "/hotels/{id}":
    get:
      summary: gets a hotel
      tags:
      - Hotels
      security:
      - bearer_auth: []
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: successful
    delete:
      summary: deletes a hotel
      tags:
      - Hotels
      security:
      - bearer_auth: []
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: successful
  "/reservations":
    get:
      summary: List reservations
      responses:
        '200':
          description: successful
    post:
      summary: Creates a reservation successfully
      tags:
      - Reservations
      security:
      - bearer_auth: []
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '201':
          description: reservation created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: date
                hotel_room_id:
                  type: integer
                user_id:
                  type: integer
              required:
              - date
              - hotel_room_id
  "/users":
    post:
      summary: creates an user successfully
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: user created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                image:
                  type: string
                admin:
                  type: boolean
              required:
              - name
              - email
              - password
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
